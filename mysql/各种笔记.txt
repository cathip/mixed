查询字符串列表 FIND_IN_SET 检查字符串是否在记录集
SELECT * FROM mer_stock WHERE FIND_IN_SET('{spd_id}', mer_stock.stock_specs)

更新字段中部分数据
update tab set A = concat(substring(A,1,3),'bbb');

例如：a=2211，现在要替换成2222,就是把1换成2
SQl语句这么写：update table set a=REPLACE(a,'1','2');

----------------表被锁--------------------
SHOW PROCESSLIST;
SELECT * FROM information_schema.INNODB_TRX #查看进行中的事务
KILL 169726;

------------------------------------------------------------
mysql CONCAT(str1,str2,…)                        
返回结果为连接参数产生的字符串。如有任何一个参数为NULL ，则返回值为 NULL。或许有一个或多个参数。 如果所有参数均为非二进制字符串，则结果为非二进制字符串。 如果自变量中含有任一二进制字符串，则结果为一个二进制字符串。一个数字参数被转化为与之相等的二进制字符串格式；若要避免这种情况，可使用显式类型 cast, 例如： SELECT CONCAT(CAST(int_col AS CHAR), char_col)

mysql> SELECT CONCAT(’My’, ‘S’, ‘QL’);

-> ‘MySQL’

mysql> SELECT CONCAT(’My’, NULL, ‘QL’);

-> NULL

mysql> SELECT CONCAT(14.3);

-> ‘14.3′

 

mysql CONCAT_WS(separator,str1,str2,…) 
CONCAT_WS() 代表 CONCAT With Separator ，是CONCAT()的特殊形式。   第一个参数是其它参数的分隔符。分隔符的位置放在要连接的两个字符串之间。分隔符可以是一个字符串，也可以是其它参数。如果分隔符为 NULL，则结果为 NULL。函数会忽略任何分隔符参数后的 NULL 值。

mysql> SELECT CONCAT_WS(’,',’First name’,'Second name’,'Last Name’);

-> ‘First name,Second name,Last Name’

mysql> SELECT CONCAT_WS(’,',’First name’,NULL,’Last Name’);

-> ‘First name,Last Name’

mysql CONCAT_WS()不会忽略任何空字符串。 (然而会忽略所有的 NULL）。

explain(加在语句之前查询语句的速度)


group_concat
如果使用了 group 那么就用group_concat